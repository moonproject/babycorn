---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/expenses":
    get:
      summary: Retrieves all expenses
      tags:
      - Expenses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    amount:
                      type: integer
                    user_id:
                      type: integer
                    status:
                      type: string
                  required:
                  - id
                  - title
                  - amount
                  - user_id
                  - status
  "/api/v1/expenses/{id}":
    get:
      summary: Retrieves an expense
      tags:
      - Expenses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  amount:
                    type: integer
                  user_id:
                    type: integer
                  status:
                    type: string
                required:
                - id
                - title
                - amount
                - user_id
                - status
        '404':
          description: Not found
    put:
      summary: Update an expense
      tags:
      - Expenses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  amount:
                    type: integer
                  user_id:
                    type: integer
                  status:
                    type: string
                required:
                - id
                - title
                - amount
                - user_id
                - status
        '404':
          description: Not found
  "/api/v1/expenses/{id}/validate":
    post:
      summary: Validate an expense
      tags:
      - Expenses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  amount:
                    type: integer
                  user_id:
                    type: integer
                  status:
                    type: string
                required:
                - id
                - title
                - amount
                - user_id
                - status
        '404':
          description: Not found
  "/api/v1/users":
    get:
      summary: Retrieves all users
      tags:
      - Users
      responses:
        '200':
          description: users found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  firstname:
                    type: string
                  lastname:
                    type: string
                  email:
                    type: string
                required:
                - id
                - firstname
                - lastname
                - email
  "/api/v1/users/{id}":
    get:
      summary: Retrieves an user
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    firstname:
                      type: string
                    lastname:
                      type: string
                    email:
                      type: string
                  required:
                  - id
                  - firstname
                  - lastname
                  - email
        '404':
          description: user not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
